/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_nodeconfig_free(a: number): void;
export function __wbg_get_nodeconfig_network(a: number): number;
export function __wbg_set_nodeconfig_network(a: number, b: number): void;
export function __wbg_get_nodeconfig_genesis_hash(a: number, b: number): void;
export function __wbg_set_nodeconfig_genesis_hash(a: number, b: number, c: number): void;
export function __wbg_get_nodeconfig_bootnodes(a: number, b: number): void;
export function __wbg_set_nodeconfig_bootnodes(a: number, b: number, c: number): void;
export function __wbg_nodeclient_free(a: number): void;
export function nodeclient_new(a: number, b: number, c: number): number;
export function nodeclient_is_running(a: number): number;
export function nodeclient_start(a: number, b: number): number;
export function nodeclient_local_peer_id(a: number): number;
export function nodeclient_peer_tracker_info(a: number): number;
export function nodeclient_wait_connected(a: number): number;
export function nodeclient_wait_connected_trusted(a: number): number;
export function nodeclient_network_info(a: number): number;
export function nodeclient_listeners(a: number): number;
export function nodeclient_connected_peers(a: number): number;
export function nodeclient_set_peer_trust(a: number, b: number, c: number, d: number): number;
export function nodeclient_request_head_header(a: number): number;
export function nodeclient_request_header_by_hash(a: number, b: number, c: number): number;
export function nodeclient_request_header_by_height(a: number, b: number): number;
export function nodeclient_request_verified_headers(a: number, b: number, c: number): number;
export function nodeclient_syncer_info(a: number): number;
export function nodeclient_get_network_head_header(a: number): number;
export function nodeclient_get_local_head_header(a: number): number;
export function nodeclient_get_header_by_hash(a: number, b: number, c: number): number;
export function nodeclient_get_header_by_height(a: number, b: number): number;
export function nodeclient_get_headers(a: number, b: number, c: number, d: number, e: number): number;
export function nodeclient_get_sampling_metadata(a: number, b: number): number;
export function nodeclient_close(a: number): number;
export function nodeclient_events_channel(a: number): number;
export function nodeconfig_default(a: number): number;
export function setup_logging(): void;
export function run_worker(a: number, b: number): number;
export function __wbg_networkinfosnapshot_free(a: number): void;
export function __wbg_set_networkinfosnapshot_num_peers(a: number, b: number): void;
export function __wbg_connectioncounterssnapshot_free(a: number): void;
export function __wbg_get_connectioncounterssnapshot_num_connections(a: number): number;
export function __wbg_set_connectioncounterssnapshot_num_connections(a: number, b: number): void;
export function __wbg_get_connectioncounterssnapshot_num_pending(a: number): number;
export function __wbg_set_connectioncounterssnapshot_num_pending(a: number, b: number): void;
export function __wbg_get_connectioncounterssnapshot_num_pending_incoming(a: number): number;
export function __wbg_set_connectioncounterssnapshot_num_pending_incoming(a: number, b: number): void;
export function __wbg_get_connectioncounterssnapshot_num_pending_outgoing(a: number): number;
export function __wbg_set_connectioncounterssnapshot_num_pending_outgoing(a: number, b: number): void;
export function __wbg_get_connectioncounterssnapshot_num_established_incoming(a: number): number;
export function __wbg_set_connectioncounterssnapshot_num_established_incoming(a: number, b: number): void;
export function __wbg_get_connectioncounterssnapshot_num_established_outgoing(a: number): number;
export function __wbg_set_connectioncounterssnapshot_num_established_outgoing(a: number, b: number): void;
export function __wbg_get_connectioncounterssnapshot_num_established(a: number): number;
export function __wbg_set_connectioncounterssnapshot_num_established(a: number, b: number): void;
export function __wbg_get_networkinfosnapshot_num_peers(a: number): number;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function _dyn_core__ops__function__Fn__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hc865c6a4da46fe2a(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hd729337076372289(a: number, b: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hd3ab4c603259d1bc(a: number, b: number, c: number, d: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h44687e23abc16b06(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hd15c037651943fee(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h96cd4f3b47f3944f(a: number, b: number): void;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
export function wasm_bindgen__convert__closures__invoke2_mut__h75e6a00b34c272b0(a: number, b: number, c: number, d: number): void;
export function __wbindgen_start(): void;
